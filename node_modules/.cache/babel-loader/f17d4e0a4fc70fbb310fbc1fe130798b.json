{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\n\n/**\r\n * A very simple debouncer that will report the latest value after a delay number of milliseconds\r\n * If the value changes multiple times within the delay interval the timer is reset and only the last\r\n * value is returned.\r\n * @param value\r\n * @param delay\r\n */\nexport const useDebounce = (value, delay) => {\n  _s();\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  const [isDebouncing, setIsDebouncing] = useState(false);\n  useEffect(() => {\n    setIsDebouncing(true);\n    const timeoutId = setTimeout(() => {\n      setIsDebouncing(false);\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [value, delay]);\n  return {\n    debouncedValue,\n    isDebouncing\n  };\n};\n_s(useDebounce, \"rlOAB7MtKgCbqk5B2XXloYopngo=\");","map":{"version":3,"names":["useEffect","useState","useDebounce","value","delay","debouncedValue","setDebouncedValue","isDebouncing","setIsDebouncing","timeoutId","setTimeout","clearTimeout"],"sources":["/Users/mai.nguyen/Desktop/Bouvet/FOREDRAG/BouvetSmallOne-main/src/utils/useDebounce.ts"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\n/**\r\n * A very simple debouncer that will report the latest value after a delay number of milliseconds\r\n * If the value changes multiple times within the delay interval the timer is reset and only the last\r\n * value is returned.\r\n * @param value\r\n * @param delay\r\n */\r\nexport const useDebounce = <TValue>(value: TValue, delay: number) => {\r\n\tconst [debouncedValue, setDebouncedValue] = useState(value)\r\n\tconst [isDebouncing, setIsDebouncing] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsDebouncing(true)\r\n\t\tconst timeoutId = setTimeout(() => {\r\n\t\t\tsetIsDebouncing(false)\r\n\t\t\tsetDebouncedValue(value)\r\n\t\t}, delay)\r\n\t\treturn () => {\r\n\t\t\tclearTimeout(timeoutId)\r\n\t\t}\r\n\t}, [value, delay])\r\n\r\n\treturn { debouncedValue, isDebouncing }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAG,CAASC,KAAa,EAAEC,KAAa,KAAK;EAAA;EACpE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAACE,KAAK,CAAC;EAC3D,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACfQ,eAAe,CAAC,IAAI,CAAC;IACrB,MAAMC,SAAS,GAAGC,UAAU,CAAC,MAAM;MAClCF,eAAe,CAAC,KAAK,CAAC;MACtBF,iBAAiB,CAACH,KAAK,CAAC;IACzB,CAAC,EAAEC,KAAK,CAAC;IACT,OAAO,MAAM;MACZO,YAAY,CAACF,SAAS,CAAC;IACxB,CAAC;EACF,CAAC,EAAE,CAACN,KAAK,EAAEC,KAAK,CAAC,CAAC;EAElB,OAAO;IAAEC,cAAc;IAAEE;EAAa,CAAC;AACxC,CAAC;AAAA,GAhBYL,WAAW"},"metadata":{},"sourceType":"module"}