{"ast":null,"code":"import { DoubleIndexedKV } from './double-indexed-kv';\nvar Registry = /** @class */function () {\n  function Registry(generateIdentifier) {\n    this.generateIdentifier = generateIdentifier;\n    this.kv = new DoubleIndexedKV();\n  }\n  Registry.prototype.register = function (value, identifier) {\n    if (this.kv.getByValue(value)) {\n      return;\n    }\n    if (!identifier) {\n      identifier = this.generateIdentifier(value);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      var alreadyRegistered = this.kv.getByKey(identifier);\n      if (alreadyRegistered && alreadyRegistered !== value) {\n        console.debug(\"Ambiguous class \\\"\" + identifier + \"\\\", provide a unique identifier.\");\n      }\n    }\n    this.kv.set(identifier, value);\n  };\n  Registry.prototype.clear = function () {\n    this.kv.clear();\n  };\n  Registry.prototype.getIdentifier = function (value) {\n    return this.kv.getByValue(value);\n  };\n  Registry.prototype.getValue = function (identifier) {\n    return this.kv.getByKey(identifier);\n  };\n  return Registry;\n}();\nexport { Registry };","map":{"version":3,"mappings":"AAAA,SAASA,eAAe,QAAQ,qBAAqB;AAErD;EAGE,kBAA6BC,kBAAoC;IAApC,uBAAkB,GAAlBA,kBAAkB;IAFvC,OAAE,GAAG,IAAID,eAAe,EAAa;EAEuB;EAEpEE,2BAAQ,GAAR,UAASC,KAAQ,EAAEC,UAAmB;IACpC,IAAI,IAAI,CAACC,EAAE,CAACC,UAAU,CAACH,KAAK,CAAC,EAAE;MAC7B;;IAGF,IAAI,CAACC,UAAU,EAAE;MACfA,UAAU,GAAG,IAAI,CAACH,kBAAkB,CAACE,KAAK,CAAC;;IAG7C,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAMC,iBAAiB,GAAG,IAAI,CAACL,EAAE,CAACM,QAAQ,CAACP,UAAU,CAAC;MACtD,IAAIM,iBAAiB,IAAIA,iBAAiB,KAAKP,KAAK,EAAE;QACpDS,OAAO,CAACC,KAAK,CACX,uBAAoBT,UAAU,qCAAiC,CAChE;;;IAIL,IAAI,CAACC,EAAE,CAACS,GAAG,CAACV,UAAU,EAAED,KAAK,CAAC;EAChC,CAAC;EAEDD,wBAAK,GAAL;IACE,IAAI,CAACG,EAAE,CAACU,KAAK,EAAE;EACjB,CAAC;EAEDb,gCAAa,GAAb,UAAcC,KAAQ;IACpB,OAAO,IAAI,CAACE,EAAE,CAACC,UAAU,CAACH,KAAK,CAAC;EAClC,CAAC;EAEDD,2BAAQ,GAAR,UAASE,UAAkB;IACzB,OAAO,IAAI,CAACC,EAAE,CAACM,QAAQ,CAACP,UAAU,CAAC;EACrC,CAAC;EACH,eAAC;AAAD,CAAC,EArCD","names":["DoubleIndexedKV","generateIdentifier","Registry","value","identifier","kv","getByValue","process","env","NODE_ENV","alreadyRegistered","getByKey","console","debug","set","clear"],"sources":["/Users/mai.nguyen/Desktop/Bouvet/FOREDRAG/BouvetSmallOne-main/node_modules/superjson/src/registry.ts"],"sourcesContent":["import { DoubleIndexedKV } from './double-indexed-kv';\n\nexport class Registry<T> {\n  private kv = new DoubleIndexedKV<string, T>();\n\n  constructor(private readonly generateIdentifier: (v: T) => string) {}\n\n  register(value: T, identifier?: string): void {\n    if (this.kv.getByValue(value)) {\n      return;\n    }\n\n    if (!identifier) {\n      identifier = this.generateIdentifier(value);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      const alreadyRegistered = this.kv.getByKey(identifier);\n      if (alreadyRegistered && alreadyRegistered !== value) {\n        console.debug(\n          `Ambiguous class \"${identifier}\", provide a unique identifier.`\n        );\n      }\n    }\n\n    this.kv.set(identifier, value);\n  }\n\n  clear(): void {\n    this.kv.clear();\n  }\n\n  getIdentifier(value: T) {\n    return this.kv.getByValue(value);\n  }\n\n  getValue(identifier: string) {\n    return this.kv.getByKey(identifier);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}