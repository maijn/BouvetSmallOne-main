{"ast":null,"code":"var _jsxFileName = \"/Users/mai.nguyen/Desktop/Bouvet/FOREDRAG/BouvetSmallOne-main/src/ui/TextInput/TextInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\n// import styles from \"./TextInput.module.css\"\nimport styled from \"@emotion/styled\";\nimport { createIdGenerator } from \"utils/createIdGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n\tmargin-bottom: 24px;\n`;\n_c = Container;\nconst Label = styled.label`\n\tdisplay: block;\n\tmargin-bottom: 6px;\n`;\n_c2 = Label;\nconst Input = styled.input`\n\tdisplay: block;\n\tpadding: 12px;\n\tborder-radius: 6px;\n\tfont-size: 1.2rem;\n`;\n_c3 = Input;\nconst idGenerator = createIdGenerator(\"textInput\");\nconst TextInputComponent = _ref => {\n  _s();\n  let {\n    label,\n    value,\n    onEnterPress,\n    onChange\n  } = _ref;\n  // const [value, setValue] = useState(\"\")\n  const id = useMemo(idGenerator, []);\n  const onInputChange = evt => {\n    onChange(evt.target.value);\n  };\n  const onKeyUp = evt => {\n    if (evt.key === \"Enter\") {\n      onEnterPress === null || onEnterPress === void 0 ? void 0 : onEnterPress();\n      evt.preventDefault();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: id,\n      type: \"text\",\n      value: value,\n      onChange: onInputChange,\n      onKeyUp: onKeyUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n};\n\n/**\r\n * Creates a text field for textual user input.\r\n */\n_s(TextInputComponent, \"q3CFjgMQLlJf2igORYY5iC/scmo=\");\n_c4 = TextInputComponent;\nexport const TextInput = /*#__PURE__*/React.memo(TextInputComponent);\n_c5 = TextInput;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"TextInputComponent\");\n$RefreshReg$(_c5, \"TextInput\");","map":{"version":3,"names":["React","useMemo","styled","createIdGenerator","Container","div","Label","label","Input","input","idGenerator","TextInputComponent","value","onEnterPress","onChange","id","onInputChange","evt","target","onKeyUp","key","preventDefault","TextInput","memo"],"sources":["/Users/mai.nguyen/Desktop/Bouvet/FOREDRAG/BouvetSmallOne-main/src/ui/TextInput/TextInput.tsx"],"sourcesContent":["import React, { useMemo } from \"react\"\r\n// import styles from \"./TextInput.module.css\"\r\nimport styled from \"@emotion/styled\"\r\nimport { createIdGenerator } from \"utils/createIdGenerator\"\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: stretch;\r\n\tmargin-bottom: 24px;\r\n`\r\nconst Label = styled.label`\r\n\tdisplay: block;\r\n\tmargin-bottom: 6px;\r\n`\r\nconst Input = styled.input`\r\n\tdisplay: block;\r\n\tpadding: 12px;\r\n\tborder-radius: 6px;\r\n\tfont-size: 1.2rem;\r\n`\r\n\r\nconst idGenerator = createIdGenerator(\"textInput\")\r\n\r\nexport interface TextInputProps {\r\n\tlabel: string\r\n\tvalue: string\r\n\t/**\r\n\t * Provide a function that will be called whenever the Enter key is pressed while the input has focus.\r\n\t */\r\n\tonEnterPress?: () => unknown\r\n\tonChange: (newValue: string) => unknown\r\n}\r\n\r\nconst TextInputComponent = ({\r\n\tlabel,\r\n\tvalue,\r\n\tonEnterPress,\r\n\tonChange\r\n}: TextInputProps) => {\r\n\t// const [value, setValue] = useState(\"\")\r\n\tconst id = useMemo(idGenerator, [])\r\n\r\n\tconst onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tonChange(evt.target.value)\r\n\t}\r\n\r\n\tconst onKeyUp = (evt: React.KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (evt.key === \"Enter\") {\r\n\t\t\tonEnterPress?.()\r\n\t\t\tevt.preventDefault()\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Label htmlFor={id}>{label}</Label>\r\n\t\t\t<Input\r\n\t\t\t\tid={id}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={onInputChange}\r\n\t\t\t\tonKeyUp={onKeyUp}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\n/**\r\n * Creates a text field for textual user input.\r\n */\r\nexport const TextInput = React.memo(TextInputComponent)\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC;AACA,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,iBAAiB,QAAQ,yBAAyB;AAAA;AAE3D,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAAA,KALKD,SAAS;AAMf,MAAME,KAAK,GAAGJ,MAAM,CAACK,KAAM;AAC3B;AACA;AACA,CAAC;AAAA,MAHKD,KAAK;AAIX,MAAME,KAAK,GAAGN,MAAM,CAACO,KAAM;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAAA,MALKD,KAAK;AAOX,MAAME,WAAW,GAAGP,iBAAiB,CAAC,WAAW,CAAC;AAYlD,MAAMQ,kBAAkB,GAAG,QAKL;EAAA;EAAA,IALM;IAC3BJ,KAAK;IACLK,KAAK;IACLC,YAAY;IACZC;EACe,CAAC;EAChB;EACA,MAAMC,EAAE,GAAGd,OAAO,CAACS,WAAW,EAAE,EAAE,CAAC;EAEnC,MAAMM,aAAa,GAAIC,GAAwC,IAAK;IACnEH,QAAQ,CAACG,GAAG,CAACC,MAAM,CAACN,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMO,OAAO,GAAIF,GAA0C,IAAK;IAC/D,IAAIA,GAAG,CAACG,GAAG,KAAK,OAAO,EAAE;MACxBP,YAAY,aAAZA,YAAY,uBAAZA,YAAY,EAAI;MAChBI,GAAG,CAACI,cAAc,EAAE;IACrB;EACD,CAAC;EAED,oBACC,QAAC,SAAS;IAAA,wBACT,QAAC,KAAK;MAAC,OAAO,EAAEN,EAAG;MAAA,UAAER;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eACnC,QAAC,KAAK;MACL,EAAE,EAAEQ,EAAG;MACP,IAAI,EAAC,MAAM;MACX,KAAK,EAAEH,KAAM;MACb,QAAQ,EAAEI,aAAc;MACxB,OAAO,EAAEG;IAAQ;MAAA;MAAA;MAAA;IAAA,QAChB;EAAA;IAAA;IAAA;IAAA;EAAA,QACS;AAEd,CAAC;;AAED;AACA;AACA;AAFA,GAlCMR,kBAAkB;AAAA,MAAlBA,kBAAkB;AAqCxB,OAAO,MAAMW,SAAS,gBAAGtB,KAAK,CAACuB,IAAI,CAACZ,kBAAkB,CAAC;AAAA,MAA1CW,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}