{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nconst fetchPosts = async userId => {\n  const response = await fetch(`https://dummyjson.com/posts/user/${userId}`);\n  const body = await response.json();\n  return body.posts;\n};\nconst fetchPost = async postId => {\n  const response = await fetch(`https://dummyjson.com/posts/${postId}`);\n  const body = await response.json();\n  return body;\n};\nconst postKeys = {\n  all: [\"posts\"],\n  byUserId: userId => [...postKeys.all, \"byUser\", userId],\n  byId: postId => [...postKeys.all, \"byId\", postId]\n};\nexport const usePosts = byUserId => {\n  _s();\n  return useQuery(postKeys.byUserId(byUserId), () => fetchPosts(byUserId));\n};\n_s(usePosts, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const usePostById = postId => {\n  _s2();\n  return useQuery(postKeys.byId(postId), () => fetchPost(postId));\n};\n_s2(usePostById, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","fetchPosts","userId","response","fetch","body","json","posts","fetchPost","postId","postKeys","all","byUserId","byId","usePosts","usePostById"],"sources":["/Users/mai.nguyen/Desktop/Bouvet/FOREDRAG/BouvetSmallOne-main/src/data/usePosts.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { Post, PostResponse } from \"./postsModel\"\r\nimport { User } from \"./userModel\"\r\n\r\nconst fetchPosts = async (userId: User[\"id\"]) => {\r\n\tconst response = await fetch(`https://dummyjson.com/posts/user/${userId}`)\r\n\tconst body: PostResponse = await response.json()\r\n\treturn body.posts\r\n}\r\nconst fetchPost = async (postId: Post[\"id\"]) => {\r\n\tconst response = await fetch(`https://dummyjson.com/posts/${postId}`)\r\n\tconst body: Post = await response.json()\r\n\treturn body\r\n}\r\n\r\nconst postKeys = {\r\n\tall: [\"posts\"] as const,\r\n\tbyUserId: (userId: Post[\"userId\"]) =>\r\n\t\t[...postKeys.all, \"byUser\", userId] as const,\r\n\tbyId: (postId: Post[\"id\"]) => [...postKeys.all, \"byId\", postId] as const\r\n} as const\r\n\r\nexport const usePosts = (byUserId: Post[\"userId\"]) => {\r\n\treturn useQuery(postKeys.byUserId(byUserId), () => fetchPosts(byUserId))\r\n}\r\n\r\nexport const usePostById = (postId: Post[\"id\"]) => {\r\n\treturn useQuery(postKeys.byId(postId), () => fetchPost(postId))\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAIhD,MAAMC,UAAU,GAAG,MAAOC,MAAkB,IAAK;EAChD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmCF,MAAO,EAAC,CAAC;EAC1E,MAAMG,IAAkB,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAChD,OAAOD,IAAI,CAACE,KAAK;AAClB,CAAC;AACD,MAAMC,SAAS,GAAG,MAAOC,MAAkB,IAAK;EAC/C,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BK,MAAO,EAAC,CAAC;EACrE,MAAMJ,IAAU,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EACxC,OAAOD,IAAI;AACZ,CAAC;AAED,MAAMK,QAAQ,GAAG;EAChBC,GAAG,EAAE,CAAC,OAAO,CAAU;EACvBC,QAAQ,EAAGV,MAAsB,IAChC,CAAC,GAAGQ,QAAQ,CAACC,GAAG,EAAE,QAAQ,EAAET,MAAM,CAAU;EAC7CW,IAAI,EAAGJ,MAAkB,IAAK,CAAC,GAAGC,QAAQ,CAACC,GAAG,EAAE,MAAM,EAAEF,MAAM;AAC/D,CAAU;AAEV,OAAO,MAAMK,QAAQ,GAAIF,QAAwB,IAAK;EAAA;EACrD,OAAOZ,QAAQ,CAACU,QAAQ,CAACE,QAAQ,CAACA,QAAQ,CAAC,EAAE,MAAMX,UAAU,CAACW,QAAQ,CAAC,CAAC;AACzE,CAAC;AAAA,GAFYE,QAAQ;EAAA,QACbd,QAAQ;AAAA;AAGhB,OAAO,MAAMe,WAAW,GAAIN,MAAkB,IAAK;EAAA;EAClD,OAAOT,QAAQ,CAACU,QAAQ,CAACG,IAAI,CAACJ,MAAM,CAAC,EAAE,MAAMD,SAAS,CAACC,MAAM,CAAC,CAAC;AAChE,CAAC;AAAA,IAFYM,WAAW;EAAA,QAChBf,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}