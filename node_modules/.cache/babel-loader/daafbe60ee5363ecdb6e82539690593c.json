{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nconst fetchUsers = async query => {\n  const url = query ? `https://dummyjson.com/users/search?q=${query}` : \"https://dummyjson.com/users\";\n  const response = await fetch(url);\n  const body = await response.json();\n  return body.users;\n};\nconst createUser = async newUser => {\n  const response = await fetch(\"https://dummyjson.com/users/add\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(newUser)\n  });\n  const body = await response.json();\n  return body;\n};\nconst userKeys = {\n  all: [\"users\"],\n  byQuery: query => !query ? userKeys.all : [...userKeys.all, \"byQuery\", query]\n};\nexport const useUsers = query => {\n  _s();\n  return useQuery(userKeys.byQuery(query), () => fetchUsers(query), {\n    refetchOnWindowFocus: false\n  });\n};\n_s(useUsers, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useCreateUserMutation = () => {\n  _s2();\n  const queryClient = useQueryClient();\n  return useMutation(createUser, {\n    onSuccess: user => {\n      var _queryClient$getQuery;\n      const users = (_queryClient$getQuery = queryClient.getQueryData(userKeys.all)) !== null && _queryClient$getQuery !== void 0 ? _queryClient$getQuery : [];\n      queryClient.invalidateQueries(userKeys.all);\n      queryClient.setQueryData(userKeys.all, () => users.concat([user]));\n    }\n  });\n};\n_s2(useCreateUserMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});","map":{"version":3,"names":["useMutation","useQuery","useQueryClient","fetchUsers","query","url","response","fetch","body","json","users","createUser","newUser","method","headers","JSON","stringify","userKeys","all","byQuery","useUsers","refetchOnWindowFocus","useCreateUserMutation","queryClient","onSuccess","user","getQueryData","invalidateQueries","setQueryData","concat"],"sources":["/Users/mai.nguyen/Desktop/Bouvet/FOREDRAG/BouvetSmallOne-main/src/data/useUsers.ts"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\"\r\nimport { User, UserDTO, UserResponse } from \"./userModel\"\r\n\r\nconst fetchUsers = async (query?: string) => {\r\n\tconst url = query\r\n\t\t? `https://dummyjson.com/users/search?q=${query}`\r\n\t\t: \"https://dummyjson.com/users\"\r\n\tconst response = await fetch(url)\r\n\tconst body: UserResponse = await response.json()\r\n\treturn body.users\r\n}\r\n\r\nconst createUser = async (newUser: UserDTO) => {\r\n\tconst response = await fetch(\"https://dummyjson.com/users/add\", {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\tbody: JSON.stringify(newUser)\r\n\t})\r\n\tconst body: User = await response.json()\r\n\treturn body\r\n}\r\n\r\nconst userKeys = {\r\n\tall: [\"users\"] as const,\r\n\tbyQuery: (query?: string) =>\r\n\t\t!query ? userKeys.all : ([...userKeys.all, \"byQuery\", query] as const)\r\n} as const\r\n\r\nexport const useUsers = (query?: string) => {\r\n\treturn useQuery(userKeys.byQuery(query), () => fetchUsers(query), {\r\n\t\trefetchOnWindowFocus: false\r\n\t})\r\n}\r\n\r\nexport const useCreateUserMutation = () => {\r\n\tconst queryClient = useQueryClient()\r\n\treturn useMutation(createUser, {\r\n\t\tonSuccess: (user) => {\r\n\t\t\tconst users: User[] = queryClient.getQueryData(userKeys.all) ?? []\r\n\t\t\tqueryClient.invalidateQueries(userKeys.all)\r\n\t\t\tqueryClient.setQueryData(userKeys.all, () => users.concat([user]))\r\n\t\t}\r\n\t})\r\n}\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,uBAAuB;AAG7E,MAAMC,UAAU,GAAG,MAAOC,KAAc,IAAK;EAC5C,MAAMC,GAAG,GAAGD,KAAK,GACb,wCAAuCA,KAAM,EAAC,GAC/C,6BAA6B;EAChC,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EACjC,MAAMG,IAAkB,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAChD,OAAOD,IAAI,CAACE,KAAK;AAClB,CAAC;AAED,MAAMC,UAAU,GAAG,MAAOC,OAAgB,IAAK;EAC9C,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;IAC/DM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CN,IAAI,EAAEO,IAAI,CAACC,SAAS,CAACJ,OAAO;EAC7B,CAAC,CAAC;EACF,MAAMJ,IAAU,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EACxC,OAAOD,IAAI;AACZ,CAAC;AAED,MAAMS,QAAQ,GAAG;EAChBC,GAAG,EAAE,CAAC,OAAO,CAAU;EACvBC,OAAO,EAAGf,KAAc,IACvB,CAACA,KAAK,GAAGa,QAAQ,CAACC,GAAG,GAAI,CAAC,GAAGD,QAAQ,CAACC,GAAG,EAAE,SAAS,EAAEd,KAAK;AAC7D,CAAU;AAEV,OAAO,MAAMgB,QAAQ,GAAIhB,KAAc,IAAK;EAAA;EAC3C,OAAOH,QAAQ,CAACgB,QAAQ,CAACE,OAAO,CAACf,KAAK,CAAC,EAAE,MAAMD,UAAU,CAACC,KAAK,CAAC,EAAE;IACjEiB,oBAAoB,EAAE;EACvB,CAAC,CAAC;AACH,CAAC;AAAA,GAJYD,QAAQ;EAAA,QACbnB,QAAQ;AAAA;AAKhB,OAAO,MAAMqB,qBAAqB,GAAG,MAAM;EAAA;EAC1C,MAAMC,WAAW,GAAGrB,cAAc,EAAE;EACpC,OAAOF,WAAW,CAACW,UAAU,EAAE;IAC9Ba,SAAS,EAAGC,IAAI,IAAK;MAAA;MACpB,MAAMf,KAAa,4BAAGa,WAAW,CAACG,YAAY,CAACT,QAAQ,CAACC,GAAG,CAAC,yEAAI,EAAE;MAClEK,WAAW,CAACI,iBAAiB,CAACV,QAAQ,CAACC,GAAG,CAAC;MAC3CK,WAAW,CAACK,YAAY,CAACX,QAAQ,CAACC,GAAG,EAAE,MAAMR,KAAK,CAACmB,MAAM,CAAC,CAACJ,IAAI,CAAC,CAAC,CAAC;IACnE;EACD,CAAC,CAAC;AACH,CAAC;AAAA,IATYH,qBAAqB;EAAA,QACbpB,cAAc,EAC3BF,WAAW;AAAA"},"metadata":{},"sourceType":"module"}