{"ast":null,"code":"var _jsxFileName = \"/Users/mai.nguyen/Desktop/Bouvet/FOREDRAG/BouvetSmallOne-main/src/tasks/Incrementor/Incrementor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const IncrementorComponent = _ref => {\n  _s();\n  let {\n    limit,\n    children\n  } = _ref;\n  const [counter, setCounter] = useState(0);\n  const isLimitReached = counter >= limit;\n  const increment = () => {\n    setCounter(counter + 1);\n  };\n  const resetCounter = () => {\n    setCounter(0);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      disabled: isLimitReached,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), isLimitReached && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetCounter,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(IncrementorComponent, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n_c = IncrementorComponent;\nexport const Incrementor = /*#__PURE__*/React.memo(IncrementorComponent);\n_c2 = Incrementor;\nvar _c, _c2;\n$RefreshReg$(_c, \"IncrementorComponent\");\n$RefreshReg$(_c2, \"Incrementor\");","map":{"version":3,"names":["React","useState","IncrementorComponent","limit","children","counter","setCounter","isLimitReached","increment","resetCounter","Incrementor","memo"],"sources":["/Users/mai.nguyen/Desktop/Bouvet/FOREDRAG/BouvetSmallOne-main/src/tasks/Incrementor/Incrementor.tsx"],"sourcesContent":["import React, { useState } from \"react\"\r\n\r\nexport interface IncrementorProps {\r\n\tlimit: number\r\n\tchildren: string\r\n}\r\n\r\nexport const IncrementorComponent = ({ limit, children }: IncrementorProps) => {\r\n\tconst [counter, setCounter] = useState(0)\r\n\tconst isLimitReached = counter >= limit\r\n\r\n\tconst increment = () => {\r\n\t\tsetCounter(counter + 1)\r\n\t}\r\n\tconst resetCounter = () => {\r\n\t\tsetCounter(0)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button onClick={increment} disabled={isLimitReached}>\r\n\t\t\t\t{counter}\r\n\t\t\t</button>\r\n\t\t\t{isLimitReached && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<button onClick={resetCounter}>Reset</button>\r\n\t\t\t\t\t<p>{children}</p>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport const Incrementor = React.memo(IncrementorComponent)\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAOvC,OAAO,MAAMC,oBAAoB,GAAG,QAA2C;EAAA;EAAA,IAA1C;IAAEC,KAAK;IAAEC;EAA2B,CAAC;EACzE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAMM,cAAc,GAAGF,OAAO,IAAIF,KAAK;EAEvC,MAAMK,SAAS,GAAG,MAAM;IACvBF,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;EACxB,CAAC;EACD,MAAMI,YAAY,GAAG,MAAM;IAC1BH,UAAU,CAAC,CAAC,CAAC;EACd,CAAC;EAED,oBACC;IAAA,wBACC;MAAQ,OAAO,EAAEE,SAAU;MAAC,QAAQ,EAAED,cAAe;MAAA,UACnDF;IAAO;MAAA;MAAA;MAAA;IAAA,QACA,EACRE,cAAc,iBACd;MAAA,wBACC;QAAQ,OAAO,EAAEE,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe,eAC7C;QAAA,UAAIL;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA,gBAElB;EAAA,gBACC;AAEL,CAAC;AAAA,GAxBYF,oBAAoB;AAAA,KAApBA,oBAAoB;AA0BjC,OAAO,MAAMQ,WAAW,gBAAGV,KAAK,CAACW,IAAI,CAACT,oBAAoB,CAAC;AAAA,MAA9CQ,WAAW;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}