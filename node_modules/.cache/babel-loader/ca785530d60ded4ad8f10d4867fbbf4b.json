{"ast":null,"code":"/**\r\n * Create a new ID generator function that produces a new ID every time it is called. Will not repeat\r\n * until page is reloaded.\r\n * @param prefix Provide an optional prefix for the ID.\r\n * @returns\r\n */\nexport const createIdGenerator = function () {\n  let prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let counter = 0;\n  return function () {\n    let suffix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return `${prefix}${counter++}${suffix}`;\n  };\n};","map":{"version":3,"names":["createIdGenerator","prefix","counter","suffix"],"sources":["/Users/mai.nguyen/Desktop/Bouvet/FOREDRAG/BouvetSmallOne-main/src/utils/createIdGenerator.ts"],"sourcesContent":["/**\r\n * Create a new ID generator function that produces a new ID every time it is called. Will not repeat\r\n * until page is reloaded.\r\n * @param prefix Provide an optional prefix for the ID.\r\n * @returns\r\n */\r\nexport const createIdGenerator = (prefix: string = \"\") => {\r\n\tlet counter = 0\r\n\treturn (suffix: string = \"\") => `${prefix}${counter++}${suffix}`\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,iBAAiB,GAAG,YAAyB;EAAA,IAAxBC,MAAc,uEAAG,EAAE;EACpD,IAAIC,OAAO,GAAG,CAAC;EACf,OAAO;IAAA,IAACC,MAAc,uEAAG,EAAE;IAAA,OAAM,GAAEF,MAAO,GAAEC,OAAO,EAAG,GAAEC,MAAO,EAAC;EAAA;AACjE,CAAC"},"metadata":{},"sourceType":"module"}