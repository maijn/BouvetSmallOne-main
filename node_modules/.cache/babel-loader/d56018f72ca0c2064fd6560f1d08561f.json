{"ast":null,"code":"import { find } from './util';\nvar transfomers = {};\nexport var CustomTransformerRegistry = {\n  register: function (transformer) {\n    transfomers[transformer.name] = transformer;\n  },\n  findApplicable: function (v) {\n    return find(transfomers, function (transformer) {\n      return transformer.isApplicable(v);\n    });\n  },\n  findByName: function (name) {\n    return transfomers[name];\n  }\n};","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAQ,QAAQ;AAS7B,IAAMC,WAAW,GAA+C,EAAE;AAElE,OAAO,IAAMC,yBAAyB,GAAG;EACvCC,QAAQ,EAAR,UAAiCC,WAAmC;IAClEH,WAAW,CAACG,WAAW,CAACC,IAAI,CAAC,GAAGD,WAAW;EAC7C,CAAC;EAEDE,cAAc,EAAd,UAAkBC,CAAI;IACpB,OAAOP,IAAI,CAACC,WAAW,EAAE,qBAAW;MAAI,kBAAW,CAACO,YAAY,CAACD,CAAC,CAAC;IAA3B,CAA2B,CAEtD;EACf,CAAC;EAEDE,UAAU,EAAV,UAAWJ,IAAY;IACrB,OAAOJ,WAAW,CAACI,IAAI,CAAC;EAC1B;CACD","names":["find","transfomers","CustomTransformerRegistry","register","transformer","name","findApplicable","v","isApplicable","findByName"],"sources":["/Users/mai.nguyen/Desktop/Bouvet/FOREDRAG/BouvetSmallOne-main/node_modules/superjson/src/custom-transformer-registry.ts"],"sourcesContent":["import { JSONValue } from './types';\nimport { find } from './util';\n\nexport interface CustomTransfomer<I, O extends JSONValue> {\n  name: string;\n  isApplicable: (v: any) => v is I;\n  serialize: (v: I) => O;\n  deserialize: (v: O) => I;\n}\n\nconst transfomers: Record<string, CustomTransfomer<any, any>> = {};\n\nexport const CustomTransformerRegistry = {\n  register<I, O extends JSONValue>(transformer: CustomTransfomer<I, O>) {\n    transfomers[transformer.name] = transformer;\n  },\n\n  findApplicable<T>(v: T) {\n    return find(transfomers, transformer => transformer.isApplicable(v)) as\n      | CustomTransfomer<T, JSONValue>\n      | undefined;\n  },\n\n  findByName(name: string) {\n    return transfomers[name];\n  },\n};\n"]},"metadata":{},"sourceType":"module"}