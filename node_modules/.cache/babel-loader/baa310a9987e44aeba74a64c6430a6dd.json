{"ast":null,"code":"import { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.mjs';\nimport * as React from 'react';\nimport { displayValue, styled } from './utils.mjs';\nconst Entry = styled('div', {\n  fontFamily: 'Menlo, monospace',\n  fontSize: '1em',\n  lineHeight: '1.7',\n  outline: 'none',\n  wordBreak: 'break-word'\n});\nconst Label = styled('span', {\n  color: 'white'\n});\nconst LabelButton = styled('button', {\n  cursor: 'pointer',\n  color: 'white'\n});\nconst ExpandButton = styled('button', {\n  cursor: 'pointer',\n  color: 'inherit',\n  font: 'inherit',\n  outline: 'inherit',\n  background: 'transparent',\n  border: 'none',\n  padding: 0\n});\nconst Value = styled('span', (_props, theme) => ({\n  color: theme.danger\n}));\nconst SubEntries = styled('div', {\n  marginLeft: '.1em',\n  paddingLeft: '1em',\n  borderLeft: '2px solid rgba(0,0,0,.15)'\n});\nconst Info = styled('span', {\n  color: 'grey',\n  fontSize: '.7em'\n});\nconst Expander = _ref => {\n  let {\n    expanded,\n    style = {}\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'inline-block',\n      transition: 'all .1s ease',\n      transform: \"rotate(\" + (expanded ? 90 : 0) + \"deg) \" + (style.transform || ''),\n      ...style\n    }\n  }, \"\\u25B6\");\n};\n\n/**\n * Chunk elements in the array by size\n *\n * when the array cannot be chunked evenly by size, the last chunk will be\n * filled with the remaining elements\n *\n * @example\n * chunkArray(['a','b', 'c', 'd', 'e'], 2) // returns [['a','b'], ['c', 'd'], ['e']]\n */\nfunction chunkArray(array, size) {\n  if (size < 1) return [];\n  let i = 0;\n  const result = [];\n  while (i < array.length) {\n    result.push(array.slice(i, i + size));\n    i = i + size;\n  }\n  return result;\n}\nconst DefaultRenderer = _ref2 => {\n  let {\n    handleEntry,\n    label,\n    value,\n    subEntries = [],\n    subEntryPages = [],\n    type,\n    expanded = false,\n    toggleExpanded,\n    pageSize\n  } = _ref2;\n  const [expandedPages, setExpandedPages] = React.useState([]);\n  return /*#__PURE__*/React.createElement(Entry, {\n    key: label\n  }, subEntryPages.length ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ExpandButton, {\n    onClick: () => toggleExpanded()\n  }, /*#__PURE__*/React.createElement(Expander, {\n    expanded: expanded\n  }), \" \", label, ' ', /*#__PURE__*/React.createElement(Info, null, String(type).toLowerCase() === 'iterable' ? '(Iterable) ' : '', subEntries.length, \" \", subEntries.length > 1 ? \"items\" : \"item\")), expanded ? subEntryPages.length === 1 ? /*#__PURE__*/React.createElement(SubEntries, null, subEntries.map(handleEntry)) : /*#__PURE__*/React.createElement(SubEntries, null, subEntryPages.map((entries, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index\n  }, /*#__PURE__*/React.createElement(Entry, null, /*#__PURE__*/React.createElement(LabelButton, {\n    onClick: () => setExpandedPages(old => old.includes(index) ? old.filter(d => d !== index) : [...old, index])\n  }, /*#__PURE__*/React.createElement(Expander, {\n    expanded: expanded\n  }), \" [\", index * pageSize, \" ...\", ' ', index * pageSize + pageSize - 1, \"]\"), expandedPages.includes(index) ? /*#__PURE__*/React.createElement(SubEntries, null, entries.map(handleEntry)) : null)))) : null) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, null, label, \":\"), \" \", /*#__PURE__*/React.createElement(Value, null, displayValue(value))));\n};\nfunction isIterable(x) {\n  return Symbol.iterator in x;\n}\nfunction Explorer(_ref3) {\n  let {\n    value,\n    defaultExpanded,\n    renderer = DefaultRenderer,\n    pageSize = 100,\n    ...rest\n  } = _ref3;\n  const [expanded, setExpanded] = React.useState(Boolean(defaultExpanded));\n  const toggleExpanded = React.useCallback(() => setExpanded(old => !old), []);\n  let type = typeof value;\n  let subEntries = [];\n  const makeProperty = sub => {\n    const subDefaultExpanded = defaultExpanded === true ? {\n      [sub.label]: true\n    } : defaultExpanded == null ? void 0 : defaultExpanded[sub.label];\n    return {\n      ...sub,\n      defaultExpanded: subDefaultExpanded\n    };\n  };\n  if (Array.isArray(value)) {\n    type = 'array';\n    subEntries = value.map((d, i) => makeProperty({\n      label: i.toString(),\n      value: d\n    }));\n  } else if (value !== null && typeof value === 'object' && isIterable(value) && typeof value[Symbol.iterator] === 'function') {\n    type = 'Iterable';\n    subEntries = Array.from(value, (val, i) => makeProperty({\n      label: i.toString(),\n      value: val\n    }));\n  } else if (typeof value === 'object' && value !== null) {\n    type = 'object';\n    subEntries = Object.entries(value).map(_ref4 => {\n      let [key, val] = _ref4;\n      return makeProperty({\n        label: key,\n        value: val\n      });\n    });\n  }\n  const subEntryPages = chunkArray(subEntries, pageSize);\n  return renderer({\n    handleEntry: entry => /*#__PURE__*/React.createElement(Explorer, _extends({\n      key: entry.label,\n      value: value,\n      renderer: renderer\n    }, rest, entry)),\n    type,\n    subEntries,\n    subEntryPages,\n    value,\n    expanded,\n    toggleExpanded,\n    pageSize,\n    ...rest\n  });\n}\nexport { DefaultRenderer, Entry, ExpandButton, Expander, Info, Label, LabelButton, SubEntries, Value, chunkArray, Explorer as default };","map":{"version":3,"mappings":"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","names":["Entry","styled","fontFamily","fontSize","lineHeight","outline","wordBreak","Label","color","LabelButton","cursor","ExpandButton","font","background","border","padding","Value","_props","theme","danger","SubEntries","marginLeft","paddingLeft","borderLeft","Info","Expander","expanded","style","React","display","transition","transform","chunkArray","array","size","i","result","length","push","slice","DefaultRenderer","handleEntry","label","value","subEntries","subEntryPages","type","toggleExpanded","pageSize","expandedPages","setExpandedPages","useState","key","onClick","String","toLowerCase","map","entries","index","old","includes","filter","d","displayValue","isIterable","x","Symbol","iterator","Explorer","defaultExpanded","renderer","rest","setExpanded","Boolean","useCallback","makeProperty","sub","subDefaultExpanded","Array","isArray","toString","from","val","Object","entry"],"sources":["/Users/mai.nguyen/Desktop/Bouvet/FOREDRAG/BouvetSmallOne-main/node_modules/@tanstack/react-query-devtools/src/Explorer.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { displayValue, styled } from './utils'\n\nexport const Entry = styled('div', {\n  fontFamily: 'Menlo, monospace',\n  fontSize: '1em',\n  lineHeight: '1.7',\n  outline: 'none',\n  wordBreak: 'break-word',\n})\n\nexport const Label = styled('span', {\n  color: 'white',\n})\n\nexport const LabelButton = styled('button', {\n  cursor: 'pointer',\n  color: 'white',\n})\n\nexport const ExpandButton = styled('button', {\n  cursor: 'pointer',\n  color: 'inherit',\n  font: 'inherit',\n  outline: 'inherit',\n  background: 'transparent',\n  border: 'none',\n  padding: 0,\n})\n\nexport const Value = styled('span', (_props, theme) => ({\n  color: theme.danger,\n}))\n\nexport const SubEntries = styled('div', {\n  marginLeft: '.1em',\n  paddingLeft: '1em',\n  borderLeft: '2px solid rgba(0,0,0,.15)',\n})\n\nexport const Info = styled('span', {\n  color: 'grey',\n  fontSize: '.7em',\n})\n\ntype ExpanderProps = {\n  expanded: boolean\n  style?: React.CSSProperties\n}\n\nexport const Expander = ({ expanded, style = {} }: ExpanderProps) => (\n  <span\n    style={{\n      display: 'inline-block',\n      transition: 'all .1s ease',\n      transform: `rotate(${expanded ? 90 : 0}deg) ${style.transform || ''}`,\n      ...style,\n    }}\n  >\n    ▶\n  </span>\n)\n\ntype Entry = {\n  label: string\n}\n\ntype RendererProps = {\n  handleEntry: (entry: Entry) => JSX.Element\n  label?: string\n  value: unknown\n  subEntries: Entry[]\n  subEntryPages: Entry[][]\n  type: string\n  expanded: boolean\n  toggleExpanded: () => void\n  pageSize: number\n}\n\n/**\n * Chunk elements in the array by size\n *\n * when the array cannot be chunked evenly by size, the last chunk will be\n * filled with the remaining elements\n *\n * @example\n * chunkArray(['a','b', 'c', 'd', 'e'], 2) // returns [['a','b'], ['c', 'd'], ['e']]\n */\nexport function chunkArray<T>(array: T[], size: number): T[][] {\n  if (size < 1) return []\n  let i = 0\n  const result: T[][] = []\n  while (i < array.length) {\n    result.push(array.slice(i, i + size))\n    i = i + size\n  }\n  return result\n}\n\ntype Renderer = (props: RendererProps) => JSX.Element\n\nexport const DefaultRenderer: Renderer = ({\n  handleEntry,\n  label,\n  value,\n  subEntries = [],\n  subEntryPages = [],\n  type,\n  expanded = false,\n  toggleExpanded,\n  pageSize,\n}) => {\n  const [expandedPages, setExpandedPages] = React.useState<number[]>([])\n\n  return (\n    <Entry key={label}>\n      {subEntryPages.length ? (\n        <>\n          <ExpandButton onClick={() => toggleExpanded()}>\n            <Expander expanded={expanded} /> {label}{' '}\n            <Info>\n              {String(type).toLowerCase() === 'iterable' ? '(Iterable) ' : ''}\n              {subEntries.length} {subEntries.length > 1 ? `items` : `item`}\n            </Info>\n          </ExpandButton>\n          {expanded ? (\n            subEntryPages.length === 1 ? (\n              <SubEntries>{subEntries.map(handleEntry)}</SubEntries>\n            ) : (\n              <SubEntries>\n                {subEntryPages.map((entries, index) => (\n                  <div key={index}>\n                    <Entry>\n                      <LabelButton\n                        onClick={() =>\n                          setExpandedPages((old) =>\n                            old.includes(index)\n                              ? old.filter((d) => d !== index)\n                              : [...old, index],\n                          )\n                        }\n                      >\n                        <Expander expanded={expanded} /> [{index * pageSize} ...{' '}\n                        {index * pageSize + pageSize - 1}]\n                      </LabelButton>\n                      {expandedPages.includes(index) ? (\n                        <SubEntries>{entries.map(handleEntry)}</SubEntries>\n                      ) : null}\n                    </Entry>\n                  </div>\n                ))}\n              </SubEntries>\n            )\n          ) : null}\n        </>\n      ) : (\n        <>\n          <Label>{label}:</Label> <Value>{displayValue(value)}</Value>\n        </>\n      )}\n    </Entry>\n  )\n}\n\ntype ExplorerProps = Partial<RendererProps> & {\n  renderer?: Renderer\n  defaultExpanded?: true | Record<string, boolean>\n}\n\ntype Property = {\n  defaultExpanded?: boolean | Record<string, boolean>\n  label: string\n  value: unknown\n}\n\nfunction isIterable(x: any): x is Iterable<unknown> {\n  return Symbol.iterator in x\n}\n\nexport default function Explorer({\n  value,\n  defaultExpanded,\n  renderer = DefaultRenderer,\n  pageSize = 100,\n  ...rest\n}: ExplorerProps) {\n  const [expanded, setExpanded] = React.useState(Boolean(defaultExpanded))\n  const toggleExpanded = React.useCallback(() => setExpanded((old) => !old), [])\n\n  let type: string = typeof value\n  let subEntries: Property[] = []\n\n  const makeProperty = (sub: { label: string; value: unknown }): Property => {\n    const subDefaultExpanded =\n      defaultExpanded === true\n        ? { [sub.label]: true }\n        : defaultExpanded?.[sub.label]\n    return {\n      ...sub,\n      defaultExpanded: subDefaultExpanded,\n    }\n  }\n\n  if (Array.isArray(value)) {\n    type = 'array'\n    subEntries = value.map((d, i) =>\n      makeProperty({\n        label: i.toString(),\n        value: d,\n      }),\n    )\n  } else if (\n    value !== null &&\n    typeof value === 'object' &&\n    isIterable(value) &&\n    typeof value[Symbol.iterator] === 'function'\n  ) {\n    type = 'Iterable'\n    subEntries = Array.from(value, (val, i) =>\n      makeProperty({\n        label: i.toString(),\n        value: val,\n      }),\n    )\n  } else if (typeof value === 'object' && value !== null) {\n    type = 'object'\n    subEntries = Object.entries(value).map(([key, val]) =>\n      makeProperty({\n        label: key,\n        value: val,\n      }),\n    )\n  }\n\n  const subEntryPages = chunkArray(subEntries, pageSize)\n\n  return renderer({\n    handleEntry: (entry) => (\n      <Explorer\n        key={entry.label}\n        value={value}\n        renderer={renderer}\n        {...rest}\n        {...entry}\n      />\n    ),\n    type,\n    subEntries,\n    subEntryPages,\n    value,\n    expanded,\n    toggleExpanded,\n    pageSize,\n    ...rest,\n  })\n}\n"]},"metadata":{},"sourceType":"module"}