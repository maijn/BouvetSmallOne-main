{"ast":null,"code":"var _jsxFileName = \"/Users/mai.nguyen/Desktop/Bouvet/FOREDRAG/BouvetSmallOne-main/src/routes/pages/RepeatPage.tsx\",\n  _s = $RefreshSig$();\nimport { DemoRepeatElement } from \"demos/DemoRepeatElement\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RepeatPage = () => {\n  _s();\n  const {\n    count\n  } = useParams();\n  if (!count) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No count parameter given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }, this);\n  }\n  const countAsNum = parseInt(count);\n  if (isNaN(countAsNum)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Expected numeric count parameter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DemoRepeatElement, {\n    count: countAsNum,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Repeat me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n};\n_s(RepeatPage, \"8oeVscW4k3aQYZZvKFcb1QecRkY=\", false, function () {\n  return [useParams];\n});\n_c = RepeatPage;\nvar _c;\n$RefreshReg$(_c, \"RepeatPage\");","map":{"version":3,"names":["DemoRepeatElement","useParams","RepeatPage","count","countAsNum","parseInt","isNaN"],"sources":["/Users/mai.nguyen/Desktop/Bouvet/FOREDRAG/BouvetSmallOne-main/src/routes/pages/RepeatPage.tsx"],"sourcesContent":["import { DemoRepeatElement } from \"demos/DemoRepeatElement\"\r\nimport { useParams } from \"react-router\"\r\n\r\nexport const RepeatPage = () => {\r\n\tconst { count } = useParams<\"count\">()\r\n\r\n\tif (!count) {\r\n\t\treturn <p>No count parameter given</p>\r\n\t}\r\n\r\n\tconst countAsNum = parseInt(count)\r\n\tif (isNaN(countAsNum)) {\r\n\t\treturn <p>Expected numeric count parameter</p>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<DemoRepeatElement count={countAsNum}>\r\n\t\t\t<p>Repeat me</p>\r\n\t\t</DemoRepeatElement>\r\n\t)\r\n}\r\n"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,yBAAyB;AAC3D,SAASC,SAAS,QAAQ,cAAc;AAAA;AAExC,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;EAC/B,MAAM;IAAEC;EAAM,CAAC,GAAGF,SAAS,EAAW;EAEtC,IAAI,CAACE,KAAK,EAAE;IACX,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA+B;EACvC;EAEA,MAAMC,UAAU,GAAGC,QAAQ,CAACF,KAAK,CAAC;EAClC,IAAIG,KAAK,CAACF,UAAU,CAAC,EAAE;IACtB,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuC;EAC/C;EAEA,oBACC,QAAC,iBAAiB;IAAC,KAAK,EAAEA,UAAW;IAAA,uBACpC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAgB;IAAA;IAAA;IAAA;EAAA,QACG;AAEtB,CAAC;AAAA,GAjBYF,UAAU;EAAA,QACJD,SAAS;AAAA;AAAA,KADfC,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}